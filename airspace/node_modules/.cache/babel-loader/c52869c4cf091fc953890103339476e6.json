{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const UserSlice = createSlice({\n  name: 'User',\n  initialState: {\n    user: null\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    }\n  }\n}); // The `extraReducers` field lets the slice handle actions defined elsewhere,\n// including actions generated by createAsyncThunk or in other slices.\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = UserSlice.actions;\nexport default UserSlice.reducer;","map":{"version":3,"names":["createSlice","UserSlice","name","initialState","user","reducers","increment","state","value","decrement","incrementByAmount","actions","reducer"],"sources":["C:/Users/asus/OneDrive/Desktop/capstone/carwebsite/src/features/counter/UserSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n\n\nexport const UserSlice = createSlice({\n  name: 'User',\n  initialState:{\n    user:null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n    \n      state.value += 1;\n    },\n},})\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n\n\nexport const { increment, decrement, incrementByAmount } = UserSlice.actions;\n\n\nexport default UserSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAKA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAD6B;EAEnCC,YAAY,EAAC;IACXC,IAAI,EAAC;EADM,CAFsB;EAKnC;EACAC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MAEpBA,KAAK,CAACC,KAAN,IAAe,CAAf;IACD;EAJO;AANyB,CAAD,CAA7B,C,CAYL;AACA;;AAGF,OAAO,MAAM;EAAEF,SAAF;EAAaG,SAAb;EAAwBC;AAAxB,IAA8CT,SAAS,CAACU,OAA9D;AAGP,eAAeV,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}