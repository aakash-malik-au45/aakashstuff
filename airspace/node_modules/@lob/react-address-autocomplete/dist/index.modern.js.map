{"version":3,"file":"index.modern.js","sources":["../src/api.js","../src/verify.js","../src/Autocomplete.js","../src/AddressForm/useMergedStyles.js","../src/AddressForm/AddressForm.js","../src/CountrySelect.js","../src/AddressForm/AddressFormInternational.js"],"sourcesContent":["// External Dependencies\nimport base64 from 'base-64'\n\nexport const postAutocompleteAddress = (\n  apiKey,\n  addressPrefix,\n  additionalAddressData\n) => {\n  const url = new URL('https://api.lob.com/v1/us_autocompletions')\n  url.searchParams.append('av_integration_origin', window.location.href)\n  url.searchParams.append('integration', 'react-address-autocomplete')\n  url.searchParams.append('valid_addresses', 'true')\n  url.searchParams.append('case', 'proper')\n  const init = {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${base64.encode(apiKey + ':')}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      address_prefix: addressPrefix,\n      ...additionalAddressData\n    })\n  }\n\n  return fetch(url, init)\n}\n\nexport const postVerifyAddress = (apiKey, address) => {\n  const payload = typeof address === 'string' ? { address } : address\n  const url = new URL('https://api.lob.com/v1/us_verifications')\n  url.searchParams.append('av_integration_origin', window.location.href)\n  url.searchParams.append('integration', 'react-address-autocomplete')\n  const init = {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${base64.encode(apiKey + ':')}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  }\n\n  return fetch(url, init)\n}\n\nexport const postVerifyInternationalAddress = (\n  apiKey,\n  address,\n  countryCode\n) => {\n  const payload = typeof address === 'string' ? { address } : address\n  const url = new URL('https://api.lob.com/v1/intl_verifications')\n  url.searchParams.append('av_integration_origin', window.location.href)\n  url.searchParams.append('integration', 'react-address-autocomplete')\n  const init = {\n    method: 'POST',\n    headers: {\n      Authorization: `Basic ${base64.encode(apiKey + ':')}`,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ ...payload, country: countryCode })\n  }\n\n  return fetch(url, init)\n}\n","// Internal Dependencies\nimport { postVerifyAddress, postVerifyInternationalAddress } from './api'\n\n// Helper function to convert any API error into a JS Error object. This is needed when\n// communication to the API was successful but the payload was bad.\nconst processApiResponse = (apiResponse) =>\n  apiResponse\n    .json()\n    .then((data) =>\n      'error' in data ? Promise.reject(new Error(data.error.message)) : data\n    )\n\n/**\n * A subset of the request object required by Lob. Note: Either zip_code is required or both city\n * and state are required. Learn more about Lob's verification endpoint here:\n * https://docs.lob.com/#operation/us_verification\n * @typedef AddressObject\n * @param {string} primary_line\n * @param {string?} secondary_line\n * @param {string} city\n * @param {string} state\n * @param {string} zip_code\n */\n\nconst validateArguments = (apiKey, address, countryCode, isInternational) => {\n  if (!Object.keys(address || {}).length) {\n    return new Error('Empty address was passed to verify function')\n  }\n\n  if (!apiKey.length) {\n    return new Error('Missing API key')\n  }\n\n  if (isInternational) {\n    if (typeof countryCode !== 'string') {\n      return new Error('Expected countryCode to be of type string')\n    }\n    if (/[A-Z]{2}/.test(countryCode) === false) {\n      return new Error(\n        'countryCode must be a 2 letter country short-name code (ISO 3166)'\n      )\n    }\n  }\n\n  return null\n}\n\n/**\n * Checks the deliverability of a given address and provides meta data such as geo coordinates,\n * county, building type, etc.\n * @param {string} apiKey - The API key associated with your Lob account\n * @param {string | AddressObject} address - The address to verify\n * @returns {Promise<Object>} - The API response from Lob. For more information visit:\n *  https://docs.lob.com/#operation/us_verification\n */\nexport const verify = (apiKey, address) => {\n  const error = validateArguments(apiKey, address, null, false)\n  if (error) {\n    return Promise.reject(error)\n  }\n\n  let payloadAddress = address\n  // Check if the a single line address was passed as an object\n  if (typeof address === 'object') {\n    const componentsWithValue = Object.keys(address).filter(\n      (addressComponent) => address[addressComponent] !== ''\n    )\n    if (\n      componentsWithValue.length === 1 &&\n      componentsWithValue.includes('primary_line')\n    ) {\n      payloadAddress = address.primary_line\n    }\n  }\n\n  // Send request to Lob and let user decide how to handle the response\n  return postVerifyAddress(apiKey, payloadAddress).then(processApiResponse)\n}\n\n/**\n * Checks the deliverability of a given address and provides meta data such as geo coordinates,\n * county, building type, etc.\n * @param {string} apiKey - The API key associated with your Lob account\n * @param {string | AddressObject} address - The address to verify\n * @returns {Promise<Object>} - The API response from Lob. For more information visit:\n *  https://docs.lob.com/#operation/us_verification\n */\nexport const verifyInternational = (apiKey, address, countryCode) => {\n  const error = validateArguments(apiKey, address, countryCode, true)\n\n  if (error) {\n    return Promise.reject(error)\n  }\n\n  // Send request to Lob and let user decide how to handle the response\n  return postVerifyInternationalAddress(apiKey, address, countryCode).then(\n    processApiResponse\n  )\n}\n","// External Dependencies\nimport React, { useEffect, useState, useRef } from 'react'\nimport Select, { components } from 'react-select'\nimport throttle from 'lodash.throttle'\n\n// Internal Dependencies\nimport { postAutocompleteAddress } from './api'\n\nconst LOB_LABEL = 'lob-label'\nconst LOB_URL =\n  'https://www.lob.com/address-verification?utm_source=autocomplete&utm_medium=react'\n\nconst lobGrayText = {\n  color: '#888',\n  textDecoration: 'inherit'\n}\n\nconst lobLabel = {\n  alignItems: 'center',\n  borderBottom: '1px solid #DDDDDD',\n  cursor: 'pointer',\n  display: 'flex',\n  fontSize: '17px',\n  padding: '16px',\n  pointerEvents: 'none'\n}\n\nconst lobLabelLink = {\n  fontWeight: 600,\n  color: '#0699D6',\n  textDecoration: 'inherit'\n}\n\nconst lobLabelText = {\n  flex: 1,\n  fontWeight: 400,\n  marginLeft: '12px'\n}\n\nconst lobLogo = {\n  height: '.9em',\n  marginLeft: '1px',\n  marginTop: '3px'\n}\n\nconst logoLarge = {\n  height: '21px'\n}\n\nconst LobLogo = ({ style }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 1259 602'\n      style={style}\n    >\n      <path\n        fill='#0099d7'\n        // eslint-disable-next-line\n        d='M1063,141c-47.06,0-89,18.33-121,50.78V0H780V338.74C765,222.53,666.88,138,540,138c-137,0-242,101-242,232a235,235,0,0,0,7.7,60H164V0H0V585H307l14.54-112.68C359.94,550,441.74,602,540,602c127.75,0,225.08-83.62,240-200.41V585H930V540.27c31.8,37,77.27,56.73,133,56.73,103,0,196-109,196-228C1259,239,1175,141,1063,141ZM540,450c-45,0-81-36-81-80s36-80,81-80c46,0,81,35,81,80S585,450,540,450Zm475-1c-46,0-83-36-83-80a82.8,82.8,0,0,1,82.6-83h.4c47,0,85,37,85,83C1100,413,1062,449,1015,449Z'\n      />\n    </svg>\n  )\n}\n\nconst poweredByLob = () => (\n  <a href={LOB_URL} style={lobGrayText}>\n    <span style={{ verticalAlign: 'top' }}>Powered by </span>\n    <LobLogo style={lobLogo} />\n  </a>\n)\n\nconst getLobLabel = () => (\n  <div style={lobLabel}>\n    <LobLogo style={logoLarge} />\n    <span style={{ ...lobGrayText, ...lobLabelText }}>\n      Deliverable addresses\n    </span>\n    <a style={lobLabelLink} href={LOB_URL}>\n      Learn more\n    </a>\n  </div>\n)\n\n// Highlight the users input in the primary line by comparing char by char. We only check the\n// primary line for simplicity sake\nconst getOptionElement = (suggestion, inputValue) => {\n  /* eslint-disable camelcase */\n  const { primary_line, city, state, zip_code } = suggestion\n\n  let boldStopIndex = 0\n\n  inputValue.split('').forEach((inputChar) => {\n    if (\n      inputChar.toLowerCase() ===\n      primary_line.charAt(boldStopIndex).toLowerCase()\n    ) {\n      boldStopIndex += 1\n    }\n  })\n\n  const primaryLineElement =\n    boldStopIndex === 0 ? (\n      <span>{primary_line}, </span>\n    ) : boldStopIndex === primary_line.length ? (\n      <span>\n        <strong>{primary_line}, </strong>\n      </span>\n    ) : (\n      <span>\n        <strong>{primary_line.substring(0, boldStopIndex)}</strong>\n        {primary_line.substring(boldStopIndex)},{' '}\n      </span>\n    )\n\n  return (\n    <span>\n      {primaryLineElement}\n      <span style={lobGrayText}>\n        {city},&nbsp;{state.toUpperCase()},&nbsp;{zip_code}\n      </span>\n    </span>\n  )\n  /* eslint-enable camelcase */\n}\n\n/**\n * Part of Lob's response body schema for US autocompletions\n * https://docs.lob.com/#section/Autocompletion-Test-Env\n * @typedef AddressObject\n * @param {string} primary_line\n * @param {string?} secondary_line\n * @param {string} city\n * @param {string} state\n * @param {string} zip_code\n */\n\n/**\n * @typedef SelectionObject\n * @param {string} label - The address formatted as a single line.\n * @param {AddressObject} value - The address in its individual components.\n */\n\n/**\n * The equivalent to react-select's onChange\n * @callback onSelection\n * @param {SelectionObject} option - The selected value from Lob's autocomplete\n */\n\n/**\n * @callback onInputChange\n * @param {string} newValue - The value of the input component\n * @param {Object} actionMeta - Describes the event that occured to the input. See\n *  https://react-select.com/props for more details\n */\n\n// /**\n//  * @callback onSuggestion\n//  * @param {Array.<SelectionObject>} suggestions - Address that start the same as the user's input\n//  */\n\n/**\n * @callback onError\n * @param {string} errorMessage\n */\n\n// We override react-select's default input component in order to let users edit their input value\n// and any selected values\nconst Input = (props) => <components.Input {...props} isHidden={false} />\n\n/**\n * @param {Object?} addressComponentValues - Specifies the search for autocomplete suggestions by\n *  including a city, state, and/or zip_code.\n * @param {string} apiKey - Public API key to your Lob account.\n * @param {boolean?} delaySearch -\n *  Delay calls to the API instead of calling on every keystroke.\n *  Default: true\n * @param {number?} delayValue - The time in milliseconds to wait between each API call.\n *  Default: 800\n * @param {string?} inputValue - Allows you to control the value of the input element\n * @param {onSelection?} onSelection -\n *  Callback function when the select component changes.\n * @param {onInputChange?} onInputChange -\n *  Callback function when the input value changes.\n * @param {onError?} onError - Callback function when we receive an API error.\n * @param {boolean} primaryLineOnly - When true, applying a suggestion updates the value of our\n * @param {boolean} disableLobLogo - When true, disables the Lob logo.\n *  select component with only the primary line of the address instead of the complete address.\n */\nconst Autocomplete = ({\n  addressComponentValues = {},\n  apiKey,\n  delaySearch = false,\n  delayValue = 800,\n  disableLobLogo = true,\n  onSelection = () => {},\n  onError = () => {},\n  onInputChange = () => {},\n  inputValue: defaultInputValue = '',\n  primaryLineOnly = false,\n  ...reactSelectProps\n}) => {\n  const [inputValue, setInputValue] = useState(defaultInputValue)\n  const [selectValue, setSelectValue] = useState('AD')\n  const [autocompleteResults, setAutocompleteResults] = useState([])\n\n  const fetchData = (inputValue, addressComponentValues) =>\n    postAutocompleteAddress(apiKey, inputValue, addressComponentValues)\n      .then((result) => result.json())\n      .then(({ suggestions, error }) => {\n        if (error) {\n          onError(error.message)\n          return\n        }\n\n        const newSuggestions = suggestions.map((x) => ({\n          value: x,\n          label: getOptionElement(x, inputValue)\n        }))\n\n        setAutocompleteResults([\n          {\n            value: LOB_LABEL,\n            label: getLobLabel()\n          },\n          ...newSuggestions\n        ])\n      })\n      .catch((err) => {\n        console.error(err.message)\n        onError(err.message)\n      })\n\n  const throttledFetchData = useRef(throttle(fetchData, delayValue)).current\n\n  useEffect(() => {\n    if (inputValue) {\n      if (delaySearch) {\n        // We pass inputValue manually because otherwise throttle would create a snapshot of\n        // fetchData with the previous state of inputValue instead of the new updated one.\n        throttledFetchData(inputValue, addressComponentValues)\n      } else {\n        fetchData(inputValue, addressComponentValues)\n      }\n    }\n    // eslint-disable-next-line\n  }, [inputValue, delaySearch])\n\n  /** Event handlers */\n  const updateInputValueFromOption = (option) => {\n    if (!option) {\n      setInputValue('')\n      return\n    }\n\n    /* eslint-disable camelcase */\n    const { primary_line, secondary_line, city, state, zip_code } = option.value\n\n    if (primaryLineOnly) {\n      setInputValue(primary_line)\n    } else {\n      const secondary = secondary_line ? ' ' + secondary_line : ''\n      setInputValue(\n        `${primary_line}${secondary}, ${city}, ${state}, ${zip_code}`\n      )\n    }\n    /* eslint-enable camelcase */\n  }\n\n  // Fire when the user types into the input\n  const handleInputChange = (newInputValue, { action }) => {\n    //https://github.com/lob/react-address-autocomplete/issues/20\n    //Realistically we don't need this at all but I'll leave it in for the future\n    if (action === 'input-blur') {\n      return\n    }\n    // onInputChange => update inputValue\n    else if (action === 'input-change') {\n      setInputValue(newInputValue)\n      onInputChange(newInputValue, { action })\n    }\n  }\n\n  // Fires when the select component has changed (as opposed to the input inside the select)\n  const handleChange = (option) => {\n    if (option.value === LOB_LABEL) {\n      window.location.href = LOB_URL\n      return\n    }\n\n    // User has pasted an address directly into input, let's call the API\n    if (typeof option === 'string') {\n      setInputValue(option)\n      setSelectValue(option)\n      onSelection(option)\n      return\n    }\n\n    updateInputValueFromOption(option)\n    onSelection(option)\n  }\n\n  const handleSelect = (option) => {\n    if (option.value !== LOB_LABEL) {\n      updateInputValueFromOption(option)\n      onSelection(option)\n    }\n  }\n\n  const customFilter = (candidate, input) => {\n    return candidate\n  }\n\n  // Remove padding from first option which is our Lob label\n  const customStyles = {\n    option: (styles, { data }) => {\n      if (data.value === LOB_LABEL) {\n        return {\n          ...styles,\n          background: 'none',\n          cursor: 'pointer',\n          padding: '0'\n        }\n      }\n      return styles\n    },\n    ...reactSelectProps.styles\n  }\n\n  return (\n    <Select\n      components={{ Input }}\n      inputValue={inputValue}\n      options={autocompleteResults}\n      controlShouldRenderValue={false}\n      noOptionsMessage={!disableLobLogo ? poweredByLob : () => <div></div>}\n      placeholder='Start typing an address...'\n      value={selectValue}\n      {...reactSelectProps}\n      // We don't let user completely override onChange and onInputChange and risk them breaking\n      // the behavior of our input component.\n      filterOption={customFilter}\n      onChange={handleChange}\n      onInputChange={handleInputChange}\n      onSelect={handleSelect}\n      styles={customStyles}\n    />\n  )\n}\nexport default Autocomplete\n","let baseStyles = {\n  lob_container: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  /* Mimics UI of react-select for consistency */\n  lob_input: {\n    backgroundColor: 'hsl(0, 0%, 100%)',\n    border: 'solid 1px hsl(0, 0%, 80%)',\n    borderRadius: '4px',\n    boxSizing: 'border-box',\n    minHeight: '38px',\n    outline: 0,\n    padding: '0px 8px',\n    width: '100%'\n  },\n  lob_label: {\n    alignSelf: 'center',\n    minWidth: '5em',\n    marginRight: '1em',\n    textAlign: 'end'\n  },\n  lob_row: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '1em'\n  }\n}\n// eslint-disable-next-line\nexport default (userStyles, isInternational) => {\n  const mergedStyles = {}\n\n  if (isInternational) {\n    baseStyles = {\n      ...baseStyles,\n      lob_label: {\n        ...baseStyles.lob_label,\n        minWidth: '8em'\n      }\n    }\n  }\n\n  Object.keys(baseStyles).forEach((key) => {\n    mergedStyles[key] =\n      key in userStyles ? userStyles[key](baseStyles[key]) : baseStyles[key]\n  })\n\n  return mergedStyles\n}\n","/* eslint-disable camelcase */\n\n// External Dependencies\nimport React, { useState } from 'react'\n\n// Internal Dependencies\nimport { verify } from '../verify'\nimport Autocomplete from '../Autocomplete'\nimport useMergedStyles from './useMergedStyles'\n\nconst defaultForm = {\n  primary_line: '',\n  secondary_line: '',\n  city: '',\n  state: '',\n  zip_code: ''\n}\n\nconst customStyles = {\n  container: (provided) => ({ ...provided, width: '100%' })\n}\n\n/**\n * Similar to Autocomplete except each address component is given its own input. Autocomplete\n * occurs on the primary line but the results are inserted into each component.\n * @param {String} apiKey - Public API key to your Lob account.\n * @param {Array?} children - These elements get rendered between the address form inputs and\n *  submit button\n * @param {Boolean} hideSubmitButton - Hides the submit button and its behavior\n * @param {Function} onInputChange - Callback when any input value changes. Includes both the event\n *  object and address form. Use event.target.id to determine which component is being updated.\n * @param {Function} onSelection - Callback when the select component changes.\n * @param {Function} onSubmit - Callback after the submit button is clicked and the form inputs\n *  are updated. Passes the verification result from the API.\n * @param {Object} styles - Override the default styles by providing an object similar to the\n *  styling framework used by react-select. Each key corresponds to a component and maps to a\n *  function that returns the new styles.lob_ Here is an example:\n *    const customStyles = {\n *      container: (baseStyles) => ({\n *        ...baseStyles,\n *        // custom styles go here\n *      })\n *    }\n *  Here are the following style keys used. Note that they are all prefixed with 'lob' to avoid\n *  colliding with the keys used by react-select.\n *  - lob_container\n *  - lob_input\n *  - lob_label\n *  - lob_row\n *  - lob_submit\n *\n *  For more details visit https://react-select.com/styles\n * @param {String} submitButtonLabel\n */\nconst AddressForm = ({\n  apiKey,\n  children,\n  hideSubmitButton = false,\n  onFieldChange = () => {},\n  onSelection = () => {},\n  onSubmit = () => {},\n  styles = {},\n  submitButtonLabel = 'Submit',\n  ...additionalProps\n}) => {\n  const [form, setForm] = useState(defaultForm)\n  const { primary_line, secondary_line, city, state, zip_code } = form\n\n  const handleChange = (e) => {\n    const newForm = { ...form, [e.target.id]: e.target.value }\n    setForm(newForm)\n    onFieldChange({\n      address: newForm,\n      event: e\n    })\n  }\n\n  const handleChangePrimaryLine = (newInputValue, { action }) => {\n    if (action === 'input-change') {\n      const newForm = { ...form, primary_line: newInputValue }\n      setForm(newForm)\n      onFieldChange({\n        address: newForm,\n        event: {\n          target: {\n            id: 'primary_line',\n            value: newInputValue\n          }\n        }\n      })\n    }\n  }\n\n  const handleSelect = (option) => {\n    // Overwrite the contents of our form based on the user's selection. If the selection does not\n    // have a secondary_line we clear it in the form.\n    setForm({\n      ...option.value,\n      secondary_line: option.value.secondary_line || form.secondary_line || ''\n    })\n\n    onSelection({\n      ...option,\n      value: {\n        ...option.value,\n        secondary_line: option.value.secondary_line || form.secondary_line || ''\n      }\n    })\n  }\n\n  const handleSubmit = () =>\n    verify(apiKey, form).then((verificationResult) => {\n      const {\n        primary_line,\n        secondary_line,\n        components: { city, state, zip_code, zip_code_plus_4 }\n      } = verificationResult\n      setForm({\n        primary_line,\n        secondary_line,\n        city,\n        state,\n        zip_code: `${zip_code}-${zip_code_plus_4}`\n      })\n      onSubmit(verificationResult)\n    })\n\n  const mergedStyles = useMergedStyles(styles, false /* isInternational */)\n\n  return (\n    <div style={mergedStyles.lob_container}>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='primary_line'>\n          Address\n        </label>\n        <Autocomplete\n          apiKey={apiKey}\n          inputId='primary_line'\n          inputValue={primary_line}\n          {...additionalProps}\n          onInputChange={handleChangePrimaryLine}\n          // Below are properties that we don't let the user overwrite\n          _addressComponentValues={{ city, state, zip_code }}\n          onSelection={handleSelect}\n          primaryLineOnly\n          styles={customStyles}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='secondary_line'>\n          Apt, Suite\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='secondary_line'\n          onChange={handleChange}\n          value={secondary_line}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='city'>\n          City\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='city'\n          onChange={handleChange}\n          value={city}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='state'>\n          State\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='state'\n          onChange={handleChange}\n          value={state}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='zip_code'>\n          Zip\n        </label>\n        <input\n          style={{ ...mergedStyles.lob_input, marginBottom: 'auto' }}\n          id='zip_code'\n          onChange={handleChange}\n          value={zip_code}\n        />\n      </div>\n      {children}\n      {!hideSubmitButton && (\n        <button onClick={handleSubmit} style={mergedStyles.lob_submit}>\n          {submitButtonLabel}\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default AddressForm\n","// External Dependencies\nimport React from 'react'\n\n/**\n * ISO 3166 Country Codes. Lob international verification does not accept US or US territories\n * (US, AS, PR, FM, GU, MH, MP, PS, PW, or VI). For these addresses please use US verification.\n */\nexport const validLobCountryCodes = [\n  'AD',\n  'AE',\n  'AF',\n  'AG',\n  'AI',\n  'AL',\n  'AN',\n  'AO',\n  'AQ',\n  'AR',\n  'AT',\n  'AU',\n  'AW',\n  'AZ',\n  'BA',\n  'BB',\n  'BD',\n  'BE',\n  'BF',\n  'BG',\n  'BH',\n  'BI',\n  'BJ',\n  'BM',\n  'BN',\n  'BO',\n  'BQ',\n  'BR',\n  'BS',\n  'BT',\n  'BW',\n  'BY',\n  'BZ',\n  'CA',\n  'CD',\n  'CG',\n  'CH',\n  'CI',\n  'CK',\n  'CL',\n  'CM',\n  'CN',\n  'CO',\n  'CR',\n  'CS',\n  'CU',\n  'CV',\n  'CW',\n  'CY',\n  'CZ',\n  'DE',\n  'DJ',\n  'DK',\n  'DM',\n  'DO',\n  'DZ',\n  'EC',\n  'EE',\n  'EG',\n  'EH',\n  'ER',\n  'ES',\n  'ET',\n  'FI',\n  'FJ',\n  'FK',\n  'FO',\n  'FR',\n  'GA',\n  'GB',\n  'GD',\n  'GE',\n  'GH',\n  'GI',\n  'GL',\n  'GM',\n  'GN',\n  'GQ',\n  'GR',\n  'GS',\n  'GT',\n  'GW',\n  'GY',\n  'HK',\n  'HN',\n  'HR',\n  'HT',\n  'HU',\n  'ID',\n  'IE',\n  'IL',\n  'IN',\n  'IO',\n  'IQ',\n  'IR',\n  'IS',\n  'IT',\n  'JM',\n  'JO',\n  'JP',\n  'KE',\n  'KG',\n  'KH',\n  'KI',\n  'KM',\n  'KN',\n  'KP',\n  'KR',\n  'KW',\n  'KY',\n  'KZ',\n  'LA',\n  'LB',\n  'LC',\n  'LI',\n  'LK',\n  'LR',\n  'LS',\n  'LT',\n  'LU',\n  'LV',\n  'LY',\n  'MA',\n  'MC',\n  'MD',\n  'ME',\n  'MG',\n  'MK',\n  'ML',\n  'MM',\n  'MN',\n  'MO',\n  'MR',\n  'MS',\n  'MT',\n  'MU',\n  'MV',\n  'MW',\n  'MX',\n  'MY',\n  'MZ',\n  'NA',\n  'NE',\n  'NF',\n  'NG',\n  'NI',\n  'NL',\n  'NO',\n  'NP',\n  'NR',\n  'NU',\n  'NZ',\n  'OM',\n  'PA',\n  'PE',\n  'PG',\n  'PH',\n  'PK',\n  'PL',\n  'PN',\n  'PT',\n  'PY',\n  'QA',\n  'RO',\n  'RS',\n  'RU',\n  'RW',\n  'SA',\n  'SB',\n  'SC',\n  'SD',\n  'SE',\n  'SG',\n  'SH',\n  'SI',\n  'SK',\n  'SL',\n  'SM',\n  'SN',\n  'SO',\n  'SR',\n  'SS',\n  'ST',\n  'SV',\n  'SX',\n  'SY',\n  'SZ',\n  'TC',\n  'TD',\n  'TG',\n  'TH',\n  'TJ',\n  'TK',\n  'TL',\n  'TM',\n  'TN',\n  'TO',\n  'TR',\n  'TT',\n  'TV',\n  'TW',\n  'TZ',\n  'UA',\n  'UG',\n  'UY',\n  'UZ',\n  'VA',\n  'VC',\n  'VE',\n  'VG',\n  'VN',\n  'VU',\n  'WS',\n  'YE',\n  'ZA',\n  'ZM',\n  'ZW'\n]\n\n/**\n * Select component that hosts all of Lob's valid country codes for international verification.\n * This component does have any unique props.\n */\nconst CountrySelect = ({ ...props }) => (\n  <select {...props}>\n    {validLobCountryCodes.map((code) => (\n      <option key={code} value={code}>\n        {code}\n      </option>\n    ))}\n  </select>\n)\n\nexport default CountrySelect\n","/* eslint-disable camelcase */\n\n// External Dependencies\nimport React, { useState } from 'react'\n\n// Internal Dependencies\nimport { verifyInternational } from '../verify'\nimport CountrySelect from '../CountrySelect'\nimport useMergedStyles from './useMergedStyles'\n\nconst defaultForm = {\n  primary_line: '',\n  secondary_line: '',\n  city: '',\n  state: '',\n  postal_code: ''\n}\n\n/**\n * Renders a group of inputs for each address component including a select input for country code.\n * Does not perform any address autocompletion.\n * @param {String?} apiKey - Public API key to your Lob account.\n * @param {Array?} children - These elements get rendered between the address form inputs and\n *  submit button\n * @param {Boolean} hideSubmitButton - Hides the submit button and its behavior\n * @param {Function?} onFieldChange - Callback when any input value changes. Use e.target.id\n *  to determine which component is being updated.\n * @param {Function?} onSubmit - Callback after the submit button is clicked and the form inputs\n *  are updated. Passes the verification result from the API.\n * @param {Object} styles - Override the default styles by providing an object similar to the\n *  styling framework used by react-select. Each key corresponds to a component and maps to a\n *  function that returns the new styles.lob_ Here is an example:\n *    const customStyles = {\n *      container: (baseStyles) => ({\n *        ...baseStyles,\n *        // custom styles go here\n *      })\n *    }\n *  Here are the following style keys used. Note that they are all prefixed with 'lob' to avoid\n *  colliding with the keys used by react-select.\n *  - lob_container\n *  - lob_input\n *  - lob_label\n *  - lob_row\n *\n *  For more details visit https://react-select.com/styles\n * @param {String} submitButtonLabel\n */\nconst AddressFormInternational = ({\n  apiKey = null,\n  children,\n  hideSubmitButton = false,\n  onFieldChange = () => {},\n  onSubmit = () => {},\n  styles = {},\n  submitButtonLabel = 'Submit'\n}) => {\n  const [form, setForm] = useState(defaultForm)\n  const { primary_line, secondary_line, city, state, postal_code, country } =\n    form\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.id]: e.target.value })\n    onFieldChange(e)\n  }\n\n  const handleSubmit = () => {\n    // apiKey wasn't used is previous versions of AddressFormInternational so we made the prop\n    // optional to not introduce a breaking change.\n    if (!apiKey) {\n      console.error(\n        '[@lob/react-address-autocomplete] ' +\n          'AddressFormInternational requires props apiKey for verifications'\n      )\n      return\n    }\n\n    verifyInternational(apiKey, form, form.country).then(\n      (verificationResult) => {\n        const {\n          primary_line,\n          secondary_line,\n          components: { city, state, postal_code }\n        } = verificationResult\n        setForm({\n          primary_line,\n          secondary_line,\n          city,\n          state,\n          postal_code\n        })\n        onSubmit(verificationResult)\n      }\n    )\n  }\n\n  const mergedStyles = useMergedStyles(styles, true /* isInternational */)\n\n  return (\n    <div data-testid='intl_container' style={mergedStyles.lob_container}>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='primary_line'>\n          Address Line 1\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='primary_line'\n          onChange={handleChange}\n          value={primary_line}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='secondary_line'>\n          Address Line 2\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='secondary_line'\n          onChange={handleChange}\n          value={secondary_line}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='city'>\n          City / Town\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='city'\n          onChange={handleChange}\n          value={city}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='state'>\n          State / Province / Region\n        </label>\n        <input\n          style={mergedStyles.lob_input}\n          id='state'\n          onChange={handleChange}\n          value={state}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='postal_code'>\n          Zip / Postal Code\n        </label>\n        <input\n          style={{ ...mergedStyles.lob_input }}\n          id='postal_code'\n          onChange={handleChange}\n          value={postal_code}\n        />\n      </div>\n      <div style={mergedStyles.lob_row}>\n        <label style={mergedStyles.lob_label} htmlFor='country'>\n          Country\n        </label>\n        <CountrySelect\n          id='country'\n          onChange={handleChange}\n          style={{ ...mergedStyles.lob_input, marginBottom: 'auto' }}\n          value={country}\n        />\n      </div>\n      {children}\n      {!hideSubmitButton && (\n        <button onClick={handleSubmit} style={mergedStyles.lob_submit}>\n          {submitButtonLabel}\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default AddressFormInternational\n"],"names":["postAutocompleteAddress","apiKey","addressPrefix","additionalAddressData","url","URL","searchParams","append","window","location","href","init","method","headers","Authorization","base64","encode","body","JSON","stringify","address_prefix","fetch","postVerifyAddress","address","payload","postVerifyInternationalAddress","countryCode","country","processApiResponse","apiResponse","json","then","data","Promise","reject","Error","error","message","validateArguments","isInternational","Object","keys","length","test","verify","payloadAddress","componentsWithValue","filter","addressComponent","includes","primary_line","verifyInternational","LOB_LABEL","LOB_URL","lobGrayText","color","textDecoration","lobLabel","alignItems","borderBottom","cursor","display","fontSize","padding","pointerEvents","lobLabelLink","fontWeight","lobLabelText","flex","marginLeft","lobLogo","height","marginTop","logoLarge","LobLogo","style","poweredByLob","verticalAlign","getLobLabel","getOptionElement","suggestion","inputValue","city","state","zip_code","boldStopIndex","split","forEach","inputChar","toLowerCase","charAt","primaryLineElement","substring","toUpperCase","Input","props","Autocomplete","addressComponentValues","delaySearch","delayValue","disableLobLogo","onSelection","onError","onInputChange","defaultInputValue","primaryLineOnly","reactSelectProps","useState","setInputValue","selectValue","setSelectValue","autocompleteResults","setAutocompleteResults","fetchData","result","suggestions","newSuggestions","map","x","value","label","err","console","throttledFetchData","useRef","throttle","current","useEffect","updateInputValueFromOption","option","secondary_line","secondary","handleInputChange","newInputValue","action","handleChange","handleSelect","customFilter","candidate","input","customStyles","styles","background","baseStyles","lob_container","flexDirection","lob_input","backgroundColor","border","borderRadius","boxSizing","minHeight","outline","width","lob_label","alignSelf","minWidth","marginRight","textAlign","lob_row","marginBottom","userStyles","mergedStyles","key","defaultForm","container","provided","AddressForm","children","hideSubmitButton","onFieldChange","onSubmit","submitButtonLabel","additionalProps","form","setForm","e","newForm","target","id","event","handleChangePrimaryLine","handleSubmit","verificationResult","components","zip_code_plus_4","useMergedStyles","lob_submit","validLobCountryCodes","CountrySelect","code","postal_code","AddressFormInternational"],"mappings":"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"}